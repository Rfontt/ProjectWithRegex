function cov_stfac024o(){var path="/home/cvc/\xC1rea de Trabalho/JavaScript/JSEXPERT/Regex/module_02/project-02/app/src/textProcessFluentAPI.js";var hash="e945338576186917b250b26cd06bbf7a8536559e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/cvc/\xC1rea de Trabalho/JavaScript/JSEXPERT/Regex/module_02/project-02/app/src/textProcessFluentAPI.js",statementMap:{"0":{start:{line:1,column:26},end:{line:1,column:43}},"1":{start:{line:2,column:15},end:{line:2,column:34}},"2":{start:{line:16,column:7},end:{line:16,column:31}},"3":{start:{line:32,column:27},end:{line:32,column:98}},"4":{start:{line:33,column:26},end:{line:33,column:58}},"5":{start:{line:35,column:7},end:{line:35,column:34}},"6":{start:{line:37,column:7},end:{line:37,column:19}},"7":{start:{line:41,column:26},end:{line:41,column:44}},"8":{start:{line:43,column:7},end:{line:43,column:73}},"9":{start:{line:43,column:49},end:{line:43,column:71}},"10":{start:{line:45,column:7},end:{line:45,column:19}},"11":{start:{line:49,column:24},end:{line:49,column:54}},"12":{start:{line:51,column:6},end:{line:51,column:94}},"13":{start:{line:51,column:48},end:{line:51,column:93}},"14":{start:{line:51,column:65},end:{line:51,column:92}},"15":{start:{line:53,column:6},end:{line:53,column:18}},"16":{start:{line:58,column:6},end:{line:58,column:66}},"17":{start:{line:58,column:48},end:{line:58,column:64}},"18":{start:{line:60,column:6},end:{line:60,column:18}},"19":{start:{line:64,column:6},end:{line:64,column:27}},"20":{start:{line:68,column:0},end:{line:68,column:38}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:15,column:3},end:{line:15,column:4}},loc:{start:{line:15,column:24},end:{line:17,column:4}},line:15},"1":{name:"(anonymous_1)",decl:{start:{line:19,column:3},end:{line:19,column:4}},loc:{start:{line:19,column:23},end:{line:38,column:4}},line:19},"2":{name:"(anonymous_2)",decl:{start:{line:40,column:3},end:{line:40,column:4}},loc:{start:{line:40,column:25},end:{line:46,column:4}},line:40},"3":{name:"(anonymous_3)",decl:{start:{line:43,column:41},end:{line:43,column:42}},loc:{start:{line:43,column:49},end:{line:43,column:71}},line:43},"4":{name:"(anonymous_4)",decl:{start:{line:48,column:3},end:{line:48,column:4}},loc:{start:{line:48,column:26},end:{line:54,column:4}},line:48},"5":{name:"(anonymous_5)",decl:{start:{line:51,column:40},end:{line:51,column:41}},loc:{start:{line:51,column:48},end:{line:51,column:93}},line:51},"6":{name:"(anonymous_6)",decl:{start:{line:51,column:57},end:{line:51,column:58}},loc:{start:{line:51,column:65},end:{line:51,column:92}},line:51},"7":{name:"(anonymous_7)",decl:{start:{line:56,column:3},end:{line:56,column:4}},loc:{start:{line:56,column:15},end:{line:61,column:4}},line:56},"8":{name:"(anonymous_8)",decl:{start:{line:58,column:40},end:{line:58,column:41}},loc:{start:{line:58,column:48},end:{line:58,column:64}},line:58},"9":{name:"(anonymous_9)",decl:{start:{line:63,column:3},end:{line:63,column:4}},loc:{start:{line:63,column:11},end:{line:65,column:4}},line:63}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e945338576186917b250b26cd06bbf7a8536559e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_stfac024o=function(){return actualCoverage;};}return actualCoverage;}cov_stfac024o();const{evalueteRegex}=(cov_stfac024o().s[0]++,require('./util'));const Person=(cov_stfac024o().s[1]++,require('./person'));// O objetivo do Fluent API é executar 
// tarefa como uma pipeline, step by step
// e no fim, chama o build. 
// Muito similar ao padrão BUILDER
// A diferença é que aqui é sobre processos
// e o builder sobre construção de objeto.
class TextProcessFluentApi{// propriedade privada 
#content;constructor(content){cov_stfac024o().f[0]++;cov_stfac024o().s[2]++;this.#content=content;}extractPeopleData(){cov_stfac024o().f[1]++;// ?<= fala que vai extrair os dados que virão depois desse grupo
// [contratante|contratada] => Usamos a pipe | para dizer que queremos um ou outro, além disso tem a flag [i] para pegar maiusculas e minusculas 
// :\s{1} => vai procurar o caracter literal do dois pontos seguind de um espaço
// Tudo acima fica dentro de um parêntese para falar que 'vamos pegar daí para frente'
// ?!\s => negatice look around, vai ignorar os contratantes do fim do documento(quem só tem espaço a frente deles)
// .*\n => pegar tudo(dígitos ou palavras) até a quebra de linha
//.*? => non greety, esse ? faz com que ele pare na primeira recorrencia, assim ele evita ficar em loop
// $ informar que a pesquisa acaba no fim da linha
// g -> global
// m -> multiline
//i -> insensitive
const matchPerson=(cov_stfac024o().s[3]++,evalueteRegex(/(?<=[contratante|contratado]:\s{1})(?!\s)(.*\n.*?)$/gmi));const onlyPerson=(cov_stfac024o().s[4]++,this.#content.match(matchPerson));cov_stfac024o().s[5]++;this.#content=onlyPerson;cov_stfac024o().s[6]++;return this;}divideTextInColumns(){cov_stfac024o().f[2]++;const splitRegex=(cov_stfac024o().s[7]++,evalueteRegex(/,/));cov_stfac024o().s[8]++;this.#content=this.#content.map(line=>{cov_stfac024o().f[3]++;cov_stfac024o().s[9]++;return line.split(splitRegex);});cov_stfac024o().s[10]++;return this;}removeEmptyCaracters(){cov_stfac024o().f[4]++;const trimSpace=(cov_stfac024o().s[11]++,evalueteRegex(/^\s+|\s+$|\n/g));cov_stfac024o().s[12]++;this.#content=this.#content.map(line=>{cov_stfac024o().f[5]++;cov_stfac024o().s[13]++;return line.map(item=>{cov_stfac024o().f[6]++;cov_stfac024o().s[14]++;return item.replace(trimSpace,"");});});cov_stfac024o().s[15]++;return this;}mapPerson(){cov_stfac024o().f[7]++;cov_stfac024o().s[16]++;// Passa o array de items no construtor
this.#content=this.#content.map(line=>{cov_stfac024o().f[8]++;cov_stfac024o().s[17]++;return new Person(line);});cov_stfac024o().s[18]++;return this;}build(){cov_stfac024o().f[9]++;cov_stfac024o().s[19]++;return this.#content;}}cov_stfac024o().s[20]++;module.exports=TextProcessFluentApi;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRleHRQcm9jZXNzRmx1ZW50QVBJLmpzIl0sIm5hbWVzIjpbImV2YWx1ZXRlUmVnZXgiLCJyZXF1aXJlIiwiUGVyc29uIiwiVGV4dFByb2Nlc3NGbHVlbnRBcGkiLCJjb250ZW50IiwiY29uc3RydWN0b3IiLCJleHRyYWN0UGVvcGxlRGF0YSIsIm1hdGNoUGVyc29uIiwib25seVBlcnNvbiIsIm1hdGNoIiwiZGl2aWRlVGV4dEluQ29sdW1ucyIsInNwbGl0UmVnZXgiLCJtYXAiLCJsaW5lIiwic3BsaXQiLCJyZW1vdmVFbXB0eUNhcmFjdGVycyIsInRyaW1TcGFjZSIsIml0ZW0iLCJyZXBsYWNlIiwibWFwUGVyc29uIiwiYnVpbGQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiazlHQWVZO3lGQWZaLEtBQU0sQ0FBRUEsYUFBRiwwQkFBb0JDLE9BQU8sQ0FBQyxRQUFELENBQTNCLENBQU4sQ0FDQSxLQUFNQyxDQUFBQSxNQUFNLHlCQUFHRCxPQUFPLENBQUMsVUFBRCxDQUFWLENBQVosQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxLQUFNRSxDQUFBQSxvQkFBcUIsQ0FDdkI7QUFDRCxDQUFDQyxPQUFELENBRUFDLFdBQVcsQ0FBQ0QsT0FBRCxDQUFVLCtDQUNqQixLQUFLLENBQUNBLE9BQU4sQ0FBZ0JBLE9BQWhCLENBQ0gsQ0FFREUsaUJBQWlCLEVBQUcsd0JBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxLQUFNQyxDQUFBQSxXQUFXLHlCQUFHUCxhQUFhLENBQUMsd0RBQUQsQ0FBaEIsQ0FBakIsQ0FDQSxLQUFNUSxDQUFBQSxVQUFVLHlCQUFHLEtBQUssQ0FBQ0osT0FBTixDQUFjSyxLQUFkLENBQW9CRixXQUFwQixDQUFILENBQWhCLENBZGdCLHVCQWdCaEIsS0FBSyxDQUFDSCxPQUFOLENBQWdCSSxVQUFoQixDQWhCZ0IsdUJBa0JoQixNQUFPLEtBQVAsQ0FDSCxDQUVERSxtQkFBbUIsRUFBRyx3QkFDbEIsS0FBTUMsQ0FBQUEsVUFBVSx5QkFBR1gsYUFBYSxDQUFDLEdBQUQsQ0FBaEIsQ0FBaEIsQ0FEa0IsdUJBR2xCLEtBQUssQ0FBQ0ksT0FBTixDQUFnQixLQUFLLENBQUNBLE9BQU4sQ0FBY1EsR0FBZCxDQUFrQkMsSUFBSSxFQUFJLHFEQUFBQSxDQUFBQSxJQUFJLENBQUNDLEtBQUwsQ0FBV0gsVUFBWCxFQUFzQixDQUFoRCxDQUFoQixDQUhrQix3QkFLbEIsTUFBTyxLQUFQLENBQ0gsQ0FFREksb0JBQW9CLEVBQUcsd0JBQ3BCLEtBQU1DLENBQUFBLFNBQVMsMEJBQUdoQixhQUFhLENBQUMsZUFBRCxDQUFoQixDQUFmLENBRG9CLHdCQUdwQixLQUFLLENBQUNJLE9BQU4sQ0FBZ0IsS0FBSyxDQUFDQSxPQUFOLENBQWNRLEdBQWQsQ0FBa0JDLElBQUksRUFBSSxzREFBQUEsQ0FBQUEsSUFBSSxDQUFDRCxHQUFMLENBQVNLLElBQUksRUFBSSxzREFBQUEsQ0FBQUEsSUFBSSxDQUFDQyxPQUFMLENBQWFGLFNBQWIsQ0FBd0IsRUFBeEIsRUFBMkIsQ0FBNUMsRUFBNkMsQ0FBdkUsQ0FBaEIsQ0FIb0Isd0JBS3BCLE1BQU8sS0FBUCxDQUNGLENBRURHLFNBQVMsRUFBRyxnREFDVDtBQUNBLEtBQUssQ0FBQ2YsT0FBTixDQUFnQixLQUFLLENBQUNBLE9BQU4sQ0FBY1EsR0FBZCxDQUFrQkMsSUFBSSxFQUFJLDBEQUFJWCxDQUFBQSxNQUFKLENBQVdXLElBQVgsRUFBZ0IsQ0FBMUMsQ0FBaEIsQ0FGUyx3QkFJVCxNQUFPLEtBQVAsQ0FDRixDQUVETyxLQUFLLEVBQUcsZ0RBQ0wsTUFBTyxNQUFLLENBQUNoQixPQUFiLENBQ0YsQ0F0RHVCLEMsd0JBeUQzQmlCLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQm5CLG9CQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZXZhbHVldGVSZWdleCB9ID0gcmVxdWlyZSgnLi91dGlsJyk7XG5jb25zdCBQZXJzb24gPSByZXF1aXJlKCcuL3BlcnNvbicpO1xuXG4vLyBPIG9iamV0aXZvIGRvIEZsdWVudCBBUEkgw6kgZXhlY3V0YXIgXG4vLyB0YXJlZmEgY29tbyB1bWEgcGlwZWxpbmUsIHN0ZXAgYnkgc3RlcFxuLy8gZSBubyBmaW0sIGNoYW1hIG8gYnVpbGQuIFxuLy8gTXVpdG8gc2ltaWxhciBhbyBwYWRyw6NvIEJVSUxERVJcbi8vIEEgZGlmZXJlbsOnYSDDqSBxdWUgYXF1aSDDqSBzb2JyZSBwcm9jZXNzb3Ncbi8vIGUgbyBidWlsZGVyIHNvYnJlIGNvbnN0cnXDp8OjbyBkZSBvYmpldG8uXG5cbmNsYXNzIFRleHRQcm9jZXNzRmx1ZW50QXBpIHtcbiAgICAvLyBwcm9wcmllZGFkZSBwcml2YWRhIFxuICAgI2NvbnRlbnRcblxuICAgY29uc3RydWN0b3IoY29udGVudCkge1xuICAgICAgIHRoaXMuI2NvbnRlbnQgPSBjb250ZW50O1xuICAgfSBcblxuICAgZXh0cmFjdFBlb3BsZURhdGEoKSB7XG4gICAgICAgLy8gPzw9IGZhbGEgcXVlIHZhaSBleHRyYWlyIG9zIGRhZG9zIHF1ZSB2aXLDo28gZGVwb2lzIGRlc3NlIGdydXBvXG4gICAgICAgLy8gW2NvbnRyYXRhbnRlfGNvbnRyYXRhZGFdID0+IFVzYW1vcyBhIHBpcGUgfCBwYXJhIGRpemVyIHF1ZSBxdWVyZW1vcyB1bSBvdSBvdXRybywgYWzDqW0gZGlzc28gdGVtIGEgZmxhZyBbaV0gcGFyYSBwZWdhciBtYWl1c2N1bGFzIGUgbWludXNjdWxhcyBcbiAgICAgICAvLyA6XFxzezF9ID0+IHZhaSBwcm9jdXJhciBvIGNhcmFjdGVyIGxpdGVyYWwgZG8gZG9pcyBwb250b3Mgc2VndWluZCBkZSB1bSBlc3Bhw6dvXG4gICAgICAgLy8gVHVkbyBhY2ltYSBmaWNhIGRlbnRybyBkZSB1bSBwYXLDqm50ZXNlIHBhcmEgZmFsYXIgcXVlICd2YW1vcyBwZWdhciBkYcOtIHBhcmEgZnJlbnRlJ1xuICAgICAgIC8vID8hXFxzID0+IG5lZ2F0aWNlIGxvb2sgYXJvdW5kLCB2YWkgaWdub3JhciBvcyBjb250cmF0YW50ZXMgZG8gZmltIGRvIGRvY3VtZW50byhxdWVtIHPDsyB0ZW0gZXNwYcOnbyBhIGZyZW50ZSBkZWxlcylcbiAgICAgICAvLyAuKlxcbiA9PiBwZWdhciB0dWRvKGTDrWdpdG9zIG91IHBhbGF2cmFzKSBhdMOpIGEgcXVlYnJhIGRlIGxpbmhhXG4gICAgICAgLy8uKj8gPT4gbm9uIGdyZWV0eSwgZXNzZSA/IGZheiBjb20gcXVlIGVsZSBwYXJlIG5hIHByaW1laXJhIHJlY29ycmVuY2lhLCBhc3NpbSBlbGUgZXZpdGEgZmljYXIgZW0gbG9vcFxuICAgICAgIC8vICQgaW5mb3JtYXIgcXVlIGEgcGVzcXVpc2EgYWNhYmEgbm8gZmltIGRhIGxpbmhhXG4gICAgICAgLy8gZyAtPiBnbG9iYWxcbiAgICAgICAvLyBtIC0+IG11bHRpbGluZVxuICAgICAgIC8vaSAtPiBpbnNlbnNpdGl2ZVxuXG4gICAgICAgY29uc3QgbWF0Y2hQZXJzb24gPSBldmFsdWV0ZVJlZ2V4KC8oPzw9W2NvbnRyYXRhbnRlfGNvbnRyYXRhZG9dOlxcc3sxfSkoPyFcXHMpKC4qXFxuLio/KSQvZ21pKTtcbiAgICAgICBjb25zdCBvbmx5UGVyc29uID0gdGhpcy4jY29udGVudC5tYXRjaChtYXRjaFBlcnNvbik7XG5cbiAgICAgICB0aGlzLiNjb250ZW50ID0gb25seVBlcnNvbjtcblxuICAgICAgIHJldHVybiB0aGlzO1xuICAgfVxuXG4gICBkaXZpZGVUZXh0SW5Db2x1bW5zKCkge1xuICAgICAgIGNvbnN0IHNwbGl0UmVnZXggPSBldmFsdWV0ZVJlZ2V4KC8sLyk7XG5cbiAgICAgICB0aGlzLiNjb250ZW50ID0gdGhpcy4jY29udGVudC5tYXAobGluZSA9PiBsaW5lLnNwbGl0KHNwbGl0UmVnZXgpKTtcblxuICAgICAgIHJldHVybiB0aGlzO1xuICAgfVxuXG4gICByZW1vdmVFbXB0eUNhcmFjdGVycygpIHtcbiAgICAgIGNvbnN0IHRyaW1TcGFjZSA9IGV2YWx1ZXRlUmVnZXgoL15cXHMrfFxccyskfFxcbi9nKTtcblxuICAgICAgdGhpcy4jY29udGVudCA9IHRoaXMuI2NvbnRlbnQubWFwKGxpbmUgPT4gbGluZS5tYXAoaXRlbSA9PiBpdGVtLnJlcGxhY2UodHJpbVNwYWNlLCBcIlwiKSkpXG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgfVxuXG4gICBtYXBQZXJzb24oKSB7XG4gICAgICAvLyBQYXNzYSBvIGFycmF5IGRlIGl0ZW1zIG5vIGNvbnN0cnV0b3JcbiAgICAgIHRoaXMuI2NvbnRlbnQgPSB0aGlzLiNjb250ZW50Lm1hcChsaW5lID0+IG5ldyBQZXJzb24obGluZSkpO1xuXG4gICAgICByZXR1cm4gdGhpcztcbiAgIH1cblxuICAgYnVpbGQoKSB7XG4gICAgICByZXR1cm4gdGhpcy4jY29udGVudDtcbiAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBUZXh0UHJvY2Vzc0ZsdWVudEFwaTsiXX0=